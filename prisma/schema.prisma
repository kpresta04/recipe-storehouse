generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  firstName     String?
  lastName      String?
  isAdmin       Boolean        @default(false)
  hash          String
  tokens        Token[]
  recipes       Recipe[]
  notes         Note[]
  tags          Tag[]
  shoppingLists ShoppingList[]
  MealPlans     MealPlan[]
}

model ShoppingList {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  ingredients Json?
  startDate   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String?


  userId Int @unique

  // @@id([startDate, userId])
}

model MealPlan {
  // id          Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  meals     Json?
  startDate String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String


  userId Int

  @@id([startDate, userId])
}

model Token {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  emailToken String?   @unique
  valid      Boolean   @default(true)
  expiration DateTime?
  userId     Int
  user       User      @relation(fields: [userId], references: [id])
}

model Note {

  text     String
  Recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int
  User     User   @relation(fields: [userId], references: [id])
  userId   Int


  @@id([recipeId, userId])
}

model Tag {
  //tagList: array of tags, unique to each recipe and user
  tagList  Json
  Recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int
  User     User   @relation(fields: [userId], references: [id])
  userId   Int


  @@id([recipeId, userId])
}

model Recipe {
  id                   Int     @id @default(autoincrement())
  title                String
  sourceURL            String  @unique
  tags                 Tag[]
  analyzedInstructions Json?
  servings             Int
  cuisines             Json?
  diets                Json?
  dishTypes            Json?
  extendedIngredients  Json
  imageURL             String?
  notes                Note[]
  users                User[]



}

enum UserRole {
  STUDENT
  TEACHER
}

enum TokenType {
  EMAIL
  API
}
